name: Continuous Integration

on:
  merge_group:
  push:
    branches: master
  pull_request:
    branches: master
  workflow_dispatch:
    inputs:
      ref:
        description: 'The branch or tag to run the workflow on'
        required: true
        default: 'master'

jobs:
  bump-version:
    name: Bump Patch Version
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: web/bible-on-site/package.json
      - name: Bump patch version
        run: |
          cd web/bible-on-site
          npm version patch -m "chore(release): %s [skip ci]"
      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
      - name: Add Deploy Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      - name: Commit changes
        run: |
          cd web/bible-on-site
          git add package.json package-lock.json
          git commit -m "chore(release): Bump version [skip ci]"
      - name: Push updated version back to repository
        run: |
          git remote set-url origin git@github.com:${{ github.repository }}
          git push origin HEAD --follow-tags

  performance:
    name: Website Performance
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web/bible-on-site
    permissions:
      contents: read

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.ref || github.head_ref }}

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: web/bible-on-site/package.json
          cache-dependency-path: web/bible-on-site/package-lock.json
          cache: npm

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package.json').devDependencies['@playwright/test'])")" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install npm Dependencies
        id: npm_ci
        run: |
          npm install html-flip-book-react@https://gitpkg.now.sh/doradsoft/html-flip-book/html-flip-book-react?master
          npm ci --no-audit

      - name: Install Playwright Dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          npx playwright install --with-deps
          npx playwright install-deps

      - name: Build cache
        uses: actions/cache@v4
        with:
          path: web/bible-on-site/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build
        id: npm-build
        run: npm run build

      - name: Perf Test
        id: npm-perf-test
        run: npm run test:perf

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-perf-report
          path: web/bible-on-site/playwright-report/
          retention-days: 30
  end-to-end:
    name: Website CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web/bible-on-site
    permissions:
      contents: read

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.ref || github.head_ref }}

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: web/bible-on-site/package.json
          cache-dependency-path: web/bible-on-site/package-lock.json
          cache: npm

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package.json').devDependencies['@playwright/test'])")" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install npm Dependencies
        id: npm_ci
        run: |
          npm install html-flip-book-react@https://gitpkg.now.sh/doradsoft/html-flip-book/html-flip-book-react?master
          npm ci --no-audit

      - name: Install Playwright Dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          npx playwright install --with-deps
          npx playwright install-deps

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Unit Test
        id: npm-unit-test
        run: npm run test:unit

      - name: Build cache
        uses: actions/cache@v4
        with:
          path: web/bible-on-site/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build
        id: npm-build
        run: npm run build

      - name: E2E Test
        id: npm-e2e-test
        run: npm run test:e2e

      - name: Merge Test Coverage
        continue-on-error: true
        run: npm run coverage:merge

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: web/bible-on-site/coverage/merged/lcov.info
          disable_search: true

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: web/bible-on-site/coverage/merged/lcov.info

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-e2e-report
          path: web/bible-on-site/playwright-report/
          retention-days: 30
