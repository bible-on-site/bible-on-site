[config]
skip_core_tasks = true
default_to_workspace = false

[env]
NPM_BIN = { source = "${CARGO_MAKE_RUST_TARGET_OS}", default_value = "npm", mapping = { "windows" = "C:\\Program Files\\nodejs\\npm.cmd" } }
HOST = "127.0.0.1"
PORT = 3003

[tasks.run-api]
command = "cargo"
args = ["run"]

[tasks.lint]
"command" = "cargo"
# TODO: add , "--", "-D", "warnings" to the args to make it more strict once all warnings are fixed
args = ["clippy"]

[tasks.clean]
command = "cargo"
args = ["clean", "-p", "${CARGO_MAKE_CRATE_NAME}", "-p", "entities"]


[tasks.coverage-run-base]
env = { PROFILE = "test" }
command = "cargo"
args = ["llvm-cov", "run", "--profile", "dev", "--no-report"]

[tasks.coverage-dir-create]
command = "mkdir"
args = ["-p", ".coverage"]

[tasks.coverage-report-lcov]
dependencies = ["coverage-dir-create"]
command = "cargo"
args = [
  "llvm-cov",
  "report",
  "--profile",
  "dev",
  "--lcov",
  "--output-path",
  ".coverage/lcov.info",
]

[tasks.coverage-report-browser]
condition = { env_not_set = [
  "CI",
] } # better place the condition in tasks.test-coverage, but I couldn't find a way to do it
command = "cargo"
args = ["llvm-cov", "report", "--profile", "dev", "--open"]

[tasks.coverage-run]
dependencies = [
  "clean",
  "coverage-run-base",       # this task is terminated using a signal called from the test task
  "coverage-report-lcov",
  "coverage-report-browser",
]

[tasks.test-e2e]
command = "${NPM_BIN}"
args = ["run", "--prefix", "tests", "test:e2e"]

[tasks.coverage-e2e]
command = "${NPM_BIN}"
args = ["run", "--prefix", "tests", "coverage:e2e"]

[tasks.bump-patch-version]
command = "cargo"
args = ["release", "patch", "--no-publish", "--execute"]

[tasks.package]
command = "docker"
args = [
  "build",
  "-t",
  "${CARGO_MAKE_CRATE_NAME}:${CARGO_MAKE_CRATE_VERSION}",
  ".",
]

[tasks.version]
command = "echo"
args = ["${CARGO_MAKE_CRATE_VERSION}"]
